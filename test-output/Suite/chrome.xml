<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="2" hostname="DESKTOP-FV4QLF7" failures="0" tests="3" name="chrome" time="0.255" errors="0" timestamp="2024-01-02T11:54:28 IST">
  <testcase classname="testPackage1.BaseClass" name="@BeforeTest beforeTest" time="-1.704176668615E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeTest on method beforeTest but has not been marked @Optional or defined
in C:\Users\Anushka\eclipse-workspace\HRMOrange\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeTest on method beforeTest but has not been marked @Optional or defined
in C:\Users\Anushka\eclipse-workspace\HRMOrange\testng.xml
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="testPackage1.TestClassTNG2$TestClassTNG" name="@BeforeTest beforeTest" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="testPackage1.TestClassTNG2$TestClassTNG" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="testPackage1.TestClassTNG2$TestClassTNG" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testPackage1.TestClassTNG2$TestClassTNG" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testPackage1.LoginTestClass" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="testPackage1.LoginTestClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testPackage1.BaseClass" name="@AfterMethod aftermethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="testPackage1.LoginTestClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testPackage1.BaseClass" name="@AfterMethod aftermethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="testPackage1.LoginTestClass" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testPackage1.BaseClass" name="@AfterTest afterTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testPackage1.TestClassTNG2$TestClassTNG" name="@AfterTest test2" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest test2 -->
  <testcase classname="testPackage1.TestClassTNG2$TestClassTNG" name="test3" time="0.0">
    <skipped/>
  </testcase> <!-- test3 -->
  <testcase classname="testPackage1.LoginTestClass" name="VerifyLoginFunctionalityWithCorrectData" time="0.001">
    <skipped/>
  </testcase> <!-- VerifyLoginFunctionalityWithCorrectData -->
  <testcase classname="testPackage1.LoginTestClass" name="VerifyLoginFunctionalityWithIncorrectData" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyLoginFunctionalityWithIncorrectData -->
  <testcase classname="testPackage1.BaseClass" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testPackage1.BaseClass" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
</testsuite> <!-- chrome -->
